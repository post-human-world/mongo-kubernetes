apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongos
  namespace: mongo
spec:
  serviceName: mongo
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
        selector: mongo
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccountName: mongo-account
      initContainers:
        - name: init-mydb
          image: mongo:6.0.5
          securityContext:
            privileged: true
            runAsUser: 0
          command:
            - bash
            - -c
            - |
              [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
              ordinal=${BASH_REMATCH[1]}
              cp /data/secret/mongos-$ordinal.pem /data/cert/mongo.pem
              cp /data/secret/ca.crt /data/cert/mongoCA.crt
              if [[ $ordinal -eq 0 ]]; then 
                cp /data/script/mongos.mongodb /data/cert/nodes.mongodb
                chmod 777 /data/cert/nodes.mongodb
              fi
              chown mongodb /data/cert/
              chown mongodb /data/db/
              chown mongodb /data/log/
          volumeMounts:
            - name: mongo-cert
              mountPath: /data/cert
            - name: mongo-cert-secret
              mountPath: /data/secret
              readOnly: true
            - name: mongo-data
              mountPath: /data/db
            - name: mongo-log
              mountPath: /data/log
            - name: mongo-script
              mountPath: /data/script
      containers:
        - name: mongodb
          image: mongo:6.0.5
          securityContext:
            runAsUser: 999
          command:
            - bash
            - "-c"
            - mongos --config /data/conf/mongo.conf
          resources:
            limits:
              cpu: 1
              memory: 1500Mi
            requests:
              cpu: 500m
              memory: 1000Mi
          ports:
            - name: mongo-port
              containerPort: 27017
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
            - name: mongo-cert
              mountPath: /data/cert
              readOnly: true
            - name: mongo-config
              mountPath: /data/conf
              readOnly: true
            - name: mongo-log
              mountPath: /data/log
      volumes:
        - name: mongo-cert
          emptyDir: {}
        - name: mongo-cert-secret
          secret:
            secretName: mongo-certs
        - name: mongo-config
          configMap:
            name: mongo-conf
        - name: mongo-script
          configMap:
            name: mongo-sh-initial-script
        - name: mongo-log
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: mongo-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: standard
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Delete
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-conf
  namespace: mongo
data:
  mongo.conf: |
    # mongod.conf

    # for documentation of all options, see:
    #   http://docs.mongodb.org/manual/reference/configuration-options/

    # Where and how to store data.
    # storage:
    #   dbPath: /data/db
    #   journal:
    #     enabled: true
    #  engine:
    #  wiredTiger:

    # where to write logging data.
    systemLog:
      destination: file
      logAppend: true
      path:  /data/log/mongod.log

    # network interfaces
    net:
      port: 27017
      bindIp: 0.0.0.0
      tls:
        mode: preferTLS  # requireTLS
        certificateKeyFile: /data/cert/mongo.pem
        CAFile: /data/cert/mongoCA.crt
        clusterFile: /data/cert/mongo.pem
        allowInvalidCertificates: true
        allowConnectionsWithoutCertificates: false
        disabledProtocols: TLS1_0

    #processManagement:

    #operationProfiling:

    # replication:
      # replSetName: "rs0"
      # oplogSizeMB: 2000
      # enableMajorityReadConcern: true

    sharding:
      configDB: configdb/configdb-0.mongo:27017,configdb-1.mongo:27017

    ## Enterprise-Only Options:

    #auditLog:

    #snmp:

    security:
      clusterAuthMode: x509

    setParameter:
      enableLocalhostAuthBypass: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-sh-initial-script
  namespace: mongo
data:
  mongos.mongodb: |
    use('admin')

    try {
        db.auth('tom-mongos', 'jerry')
        sh.addShard( "sh0/mongodb-sh0-0.mongo:27017,mongodb-sh0-1.mongo:27017,mongodb-sh0-2.mongo:27017")
        sh.addShard( "sh1/mongodb-sh1-0.mongo:27017,mongodb-sh1-1.mongo:27017,mongodb-sh1-2.mongo:27017")
        print('Done')
    } catch (e) {
        print('Something happened when adding shards: ' + JSON.stringify(e))
    }
